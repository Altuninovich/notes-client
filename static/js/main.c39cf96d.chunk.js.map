{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/Loader.js","components/NotesList.js","time/time.js","pages/NotesPage.js","pages/CreatePage.js","components/NoteCard.js","pages/DetailPage.js","pages/AuthPage.js","hooks/message.hook.js","hooks/auth.hook.js","components/Navbar.js","App.jsx","routes.js","reportWebVitals.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fullUrl","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","style","display","justifyContent","paddingTop","className","NotesList","notes","setNotes","timePassed","auth","useContext","length","map","n","index","Date","date","toLocaleDateString","name","task","_id","onClick","id","Authorization","newNotes","filter","getFactTimeUTC","yearUtc","getUTCFullYear","monthUtc","getUTCMonth","dateUtc","getUTCDate","hoursUtc","getUTCHours","minutesUtc","getUTCMinutes","secondsUtc","getUTCSeconds","timeDifference","t","temp","time","timeArguments","split","reduce","acc","val","timeParser","dateFns","require","utc","x","y","year","month","day","hour","minute","second","result","differenceInYears","addYears","differenceInMonths","addMonths","differenceInDays","addDays","differenceInHours","addHours","differenceInMinutes","addMinutes","differenceInSeconds","dateTime","currentTime","moment","format","getTime","getTimeUTC","getTimeFromTaskCreation","updateTime","idTimeUtc","timeUTC","Object","fromEntries","NotesPage","setTimePassed","fetchLinks","fetched","interval","setInterval","clearInterval","useEffect","CreatePage","history","useHistory","setNameTask","setTask","window","M","updateTextFields","pressHandler","event","key","push","note","placeholder","type","value","onChange","e","target","onKeyPress","htmlFor","NoteCard","DetailPage","setNote","noteId","useParams","getNote","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","registerHandler","loginHandler","disabled","marginRight","storageName","Navbar","padding","to","href","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c39cf96d.chunk.js","sourcesContent":["import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    const fullUrl = 'https://still-cove-75223.herokuapp.com' + url\r\n    setLoading(true)\r\n    try {\r\n      if (body) {\r\n        body = JSON.stringify(body)\r\n        headers['Content-Type'] = 'application/json'\r\n      }\r\n\r\n      const response = await fetch(fullUrl, {method, body, headers})\r\n      const data = await response.json()\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Что-то пошло не так')\r\n      }\r\n\r\n      setLoading(false)\r\n\r\n      return data\r\n    } catch (e) {\r\n      setLoading(false)\r\n      setError(e.message)\r\n      throw e\r\n    }\r\n  }, [])\r\n\r\n  const clearError = useCallback(() => setError(null), [])\r\n\r\n  return { loading, request, error, clearError }\r\n}","import {createContext} from 'react';\r\n\r\nfunction noop() {};\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false,\r\n})","import React from 'react'\r\n\r\nexport const Loader = () => (\r\n  <div style={{display: 'flex', justifyContent: 'center', paddingTop: '2rem'}}>\r\n    <div className=\"preloader-wrapper active\">\r\n      <div className=\"spinner-layer spinner-red-only\">\r\n        <div className=\"circle-clipper left\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"gap-patch\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"circle-clipper right\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)","import React, {useContext, useState, useEffect} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport { Loader } from './Loader'\r\n\r\n\r\n\r\nexport const NotesList = ({ notes, setNotes, timePassed }) => {\r\n\r\n\r\n  const auth = useContext(AuthContext)\r\n  const {request} = useHttp()\r\n \r\n  if (!notes.length) {\r\n    return <p className=\"center\">Заметок пока нет</p>\r\n  }\r\n\r\n  const deleteTask = (id) => async () => {\r\n    try {\r\n      const data = await request('/api/note/delete', 'DELETE', {_id: id}, {\r\n        Authorization: `Bearer ${auth.token}`\r\n      })\r\n      const newNotes = notes.filter((n) => n._id !== id)\r\n      setNotes(newNotes)\r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>№</th>\r\n        <th>Дата создания</th>\r\n        <th>Название заметки</th>\r\n        <th>Содержание</th>\r\n        <th>Время от создания заметки</th>\r\n      </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      { notes.map((n, index) => {\r\n        return (\r\n          <tr key={n._id}>\r\n            <td>{index + 1}</td>\r\n            <td>{new Date(n.date).toLocaleDateString()}</td>\r\n            <td>{n.name}</td>\r\n            <td>{n.task}</td>\r\n            <td>{timePassed[n._id] ? timePassed[n._id] : <Loader />}</td>\r\n            <td>\r\n            <i onClick={deleteTask(n._id)} className=\"small  material-icons\">delete</i>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }) }\r\n      </tbody>\r\n    </table>\r\n  )\r\n    }","import moment from \"moment\";\r\n\r\nconst getFactTimeUTC = () => {\r\n    const date = new Date();\r\n    return {\r\n        yearUtc: date.getUTCFullYear(),\r\n        monthUtc: date.getUTCMonth(),\r\n        dateUtc: date.getUTCDate(),\r\n        hoursUtc: date.getUTCHours(),\r\n        minutesUtc: date.getUTCMinutes(),\r\n        secondsUtc: date.getUTCSeconds(),\r\n    }\r\n};\r\n\r\nconst timeParser = (time) => {\r\n    const timeArguments = ['year', 'month', 'day', 'hour', 'minute', 'second']\r\n    return time.split('-').reduce((acc, val, id) => {\r\n        return {[timeArguments[id]]: val, ...acc};\r\n    }, {})\r\n};\r\n\r\nconst timeDifference = (t) => {\r\n    const time = timeParser(t);\r\n    var dateFns = require(\"date-fns\");\r\n    const utc = getFactTimeUTC();\r\n    let x = new Date(utc.yearUtc, utc.monthUtc, utc.dateUtc, utc.hoursUtc, utc.minutesUtc, utc.secondsUtc);\r\n    const y = new Date(time.year, time.month, time.day, time.hour, time.minute, time.second);\r\n    let temp;\r\n    temp = dateFns.differenceInYears(y, x);\r\n    let result = temp + \" years \";\r\n    x = dateFns.addYears(x, temp);\r\n    temp = dateFns.differenceInMonths(y, x);\r\n    result = result + temp + \" months \";\r\n    x = dateFns.addMonths(x, temp);\r\n    temp = dateFns.differenceInDays(y, x);\r\n    result = result + temp + \" days \";\r\n    x = dateFns.addDays(x, temp);\r\n    temp = dateFns.differenceInHours(y, x);\r\n    result = result + temp + \" hours \";\r\n    x = dateFns.addHours(x, temp);\r\n    temp = dateFns.differenceInMinutes(y, x);\r\n    result = result + temp + \" minutes \";\r\n    x = dateFns.addMinutes(x, temp);\r\n    temp = dateFns.differenceInSeconds(y, x);\r\n    result = result + temp + \" seconds\";\r\n    return result;\r\n};\r\n\r\nexport const dateTime = () => {\r\n    const currentTime = moment().format('YYYY-MM-DD');\r\n    const utc = getFactTimeUTC();\r\n    return {\r\n        getTime: currentTime,\r\n        getTimeUTC: `${utc.yearUtc}-${utc.monthUtc}-${utc.dateUtc}-${utc.hoursUtc}-${utc.minutesUtc}-${utc.secondsUtc}`,\r\n        getTimeFromTaskCreation: timeDifference,\r\n    }\r\n}\r\n","import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from '../components/Loader'\r\nimport { NotesList } from '../components/NotesList'\r\nimport { dateTime } from '../time/time'\r\n\r\nconst {getTimeFromTaskCreation} = dateTime()\r\n//формируем состояние с данными о времени прошедшем от создания каждой заметки\r\nconst updateTime = (notes) => {\r\n  const idTimeUtc = notes.map((n) => [ n._id, getTimeFromTaskCreation(n.timeUTC) ])\r\n  return Object.fromEntries(idTimeUtc);\r\n}\r\n\r\nexport const NotesPage = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [timePassed, setTimePassed] = useState({})\r\n  const {loading, request} = useHttp()\r\n  const {token} = useContext(AuthContext)\r\n\r\n  const fetchLinks = useCallback(async () => {\r\n    try {\r\n      const fetched = await request('/api/note', 'GET', null, {\r\n        Authorization: `Bearer ${token}`\r\n      })\r\n      setNotes(fetched)\r\n      const interval = setInterval(() => {\r\n        setTimePassed(updateTime(fetched))\r\n        }, 1000);\r\n        return () => {\r\n          clearInterval(interval);\r\n        };\r\n\r\n    } catch (e) {}\r\n  }, [token, request])\r\n\r\n  useEffect(() => {\r\n    fetchLinks()\r\n  }, [fetchLinks])\r\n\r\n  if (loading) {\r\n    return <Loader/>\r\n  }\r\n  return (\r\n    <>\r\n      {!loading && <NotesList notes={notes} setNotes={setNotes} timePassed={timePassed}/>}\r\n    </>\r\n  )\r\n  \r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { dateTime } from '../time/time'\r\n\r\n\r\nexport const CreatePage = () => {\r\n  const history = useHistory()\r\n  const auth = useContext(AuthContext)\r\n  const {request} = useHttp()\r\n  const [name, setNameTask] = useState('')\r\n  const [task, setTask] = useState('')\r\n  \r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields()\r\n  }, [])\r\n\r\n  const pressHandler = async event => {\r\n    if (event.key === 'Enter') {\r\n      try {\r\n        const data = await request('/api/note/generate', 'POST', {\r\n          name: name, \r\n          task: task, \r\n          timeUTC: dateTime().getTimeUTC, \r\n        }, {\r\n          Authorization: `Bearer ${auth.token}`\r\n        })\r\n        history.push(`/detail/${data.note._id}`)\r\n      } catch (e) {}\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\" style={{paddingTop: '2rem'}}>\r\n        <div className=\"input-field\">\r\n          <input\r\n            placeholder=\"Введите текст\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={e => setNameTask(e.target.value)}\r\n            onKeyPress={pressHandler}\r\n          />\r\n          <label htmlFor=\"name\">Название</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"row\">\r\n    <div className=\"col s8 offset-s2\" style={{paddingTop: '2rem'}}>\r\n      <div className=\"input-field\">\r\n        <input\r\n          placeholder=\"Введите текст\"\r\n          id=\"task\"\r\n          type=\"text\"\r\n          value={task}\r\n          onChange={e => setTask(e.target.value)}\r\n          onKeyPress={pressHandler}\r\n        />\r\n        <label htmlFor=\"task\">Текст заметки</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport const NoteCard = ({ note }) => {\r\n  return (\r\n    <>\r\n      <h2>Заметка создана</h2>\r\n\r\n      <p>Название заметки: <strong>{note.name}</strong></p>\r\n      <p>Дата создания: <strong>{new Date(note.date).toLocaleDateString()}</strong></p>\r\n    </>\r\n  )\r\n}","import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from '../components/Loader'\r\nimport {NoteCard} from '../components/NoteCard'\r\n\r\nexport const DetailPage = () => {\r\n  const {token} = useContext(AuthContext)\r\n  const {request, loading} = useHttp()\r\n  const [note, setNote] = useState(null)\r\n  const noteId = useParams().id\r\n\r\n  const getNote = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(`/api/note/${noteId}`, 'GET', null, {\r\n        Authorization: `Bearer ${token}`\r\n      })\r\n      setNote(fetched)\r\n    } catch (e) {}\r\n  }, [token, noteId, request])\r\n\r\n  useEffect(() => {\r\n    getNote()\r\n  }, [getNote])\r\n\r\n  if (loading) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { !loading && note && <NoteCard note={note} /> }\r\n    </>\r\n  )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { useMessage } from '../hooks/message.hook';\r\n\r\nexport const AuthPage = () => {\r\n    const auth = useContext(AuthContext);\r\n    const message = useMessage();\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n      message(error)\r\n      clearError()\r\n    }, [error, message, clearError])\r\n\r\n    useEffect(() => {\r\n      window.M.updateTextFields()\r\n    }, []);\r\n\r\n    const changeHandler = (event) => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    };\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/register', 'POST', {...form});\r\n            message(data.message);\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n      try {\r\n          const data = await request('/api/auth/login', 'POST', {...form});\r\n          auth.login(data.token, data.userId);\r\n      } catch (error) {\r\n          \r\n      }\r\n  }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1>Заметки</h1>\r\n                <div className=\"card blue-grey darken-1\">\r\n        <div className=\"card-content white-text\">\r\n          <span className=\"card-title\">Авторизация</span>\r\n          <div>\r\n              \r\n          <div className=\"input-field\">\r\n          <input \r\n            placeholder=\"Введите email\" \r\n            id=\"email\" \r\n            type=\"text\"\r\n            name=\"email\"\r\n            className=\"green-input\"\r\n            value={form.email}\r\n            onChange={changeHandler}  \r\n          />\r\n          <label htmlFor=\"email\">Email</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n          <input \r\n            placeholder=\"Введите password\" \r\n            id=\"password\" \r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"green-input\"\r\n            value={form.password}\r\n            onChange={changeHandler}  \r\n          />\r\n          <label htmlFor=\"password\">password</label>\r\n          </div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <button onClick={loginHandler} disabled={loading} className=\"btn yellow darken-4\" style={{marginRight: '10px'}}>Войти</button>\r\n          <button onClick={registerHandler} disabled={loading} className=\"btn light-green lighten-2 black-text\">Регистрация</button>\r\n        </div>\r\n      </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {useCallback} from 'react'\r\n\r\nexport const useMessage = () => {\r\n  return useCallback(text => {\r\n    if (window.M && text) {\r\n      window.M.toast({ html: text })\r\n    }\r\n  }, [])\r\n}","import {useState, useCallback, useEffect} from 'react'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null)\r\n  const [ready, setReady] = useState(false)\r\n  const [userId, setUserId] = useState(null)\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken)\r\n    setUserId(id)\r\n\r\n    localStorage.setItem(storageName, JSON.stringify({\r\n      userId: id, token: jwtToken\r\n    }))\r\n  }, [])\r\n\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null)\r\n    setUserId(null)\r\n    localStorage.removeItem(storageName)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n    if (data && data.token) {\r\n      login(data.token, data.userId)\r\n    }\r\n    setReady(true)\r\n  }, [login])\r\n\r\n\r\n  return { login, logout, token, userId, ready }\r\n}","import React, {useContext} from 'react'\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport {AuthContext} from '../context/AuthContext'\r\n\r\nexport const Navbar = () => {\r\n  const history = useHistory()\r\n  const auth = useContext(AuthContext)\r\n\r\n  const logoutHandler = event => {\r\n    event.preventDefault()\r\n    auth.logout()\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper blue darken-1\" style={{ padding: '0 2rem' }}>\r\n        <span className=\"brand-logo\">Создание заметок</span>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li><NavLink to=\"/create\">Создать</NavLink></li>\r\n          <li><NavLink to=\"/links\">Заметки</NavLink></li>\r\n          <li><a href=\"/\" onClick={logoutHandler}>Выйти</a></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import React from 'react'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {useRoutes} from './routes'\nimport {useAuth} from './hooks/auth.hook'\nimport {AuthContext} from './context/AuthContext'\nimport {Navbar} from './components/Navbar'\nimport {Loader} from './components/Loader'\nimport 'materialize-css'\n\nfunction App() {\n  const {token, login, logout, userId, ready} = useAuth()\n  const isAuthenticated = !!token\n  const routes = useRoutes(isAuthenticated)\n\n  if (!ready) {\n    return <Loader />\n  }\n\n  return (\n    <AuthContext.Provider value={{\n      token, login, logout, userId, isAuthenticated\n    }}>\n      <Router>\n        { isAuthenticated && <Navbar /> }\n        <div className=\"container\">\n          {routes}\n        </div>\n      </Router>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {NotesPage} from './pages/NotesPage'\r\nimport {CreatePage} from './pages/CreatePage'\r\nimport {DetailPage} from './pages/DetailPage'\r\nimport {AuthPage} from './pages/AuthPage'\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/links\" exact>\r\n          <NotesPage />\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <CreatePage />\r\n        </Route>\r\n        <Route path=\"/detail/:id\">\r\n          <DetailPage />\r\n        </Route>\r\n        <Redirect to=\"/create\" />\r\n      </Switch>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}